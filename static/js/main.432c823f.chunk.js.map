{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","_ref","total","perPage","currentPage","onPageChange","elementPageLink","Array","from","length","Math","ceil","_","index","lastPageLink","start","end","rangeItemOnPage","_jsxs","_Fragment","children","className","_jsx","cn","disabled","href","onClick","map","el","active","concat","items","to","numbers","n","push","getNumbers","App","perPageItem","setPerPageItem","useState","setCurrentPage","massageItems","setMassageItems","id","defaultValue","onChange","event","Number","target","value","htmlFor","page","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.432c823f.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  total: string[];\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const elementPageLink: number[] = Array.from(\n    { length: Math.ceil(total.length / perPage) },\n    (_, index) => index + 1,\n  );\n  const lastPageLink: number = elementPageLink[elementPageLink.length - 1];\n  const start: number = currentPage * perPage - perPage + 1;\n  const end: number = start + perPage - 1;\n  const rangeItemOnPage: number[] = Array.from(\n    { length: end - start + 1 },\n    (_, index) => start + index,\n  );\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={cn('page-item', { disabled: currentPage === 1 })}>\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            onClick={() => currentPage > 1 && onPageChange(currentPage - 1)}\n            aria-disabled={currentPage > 1 ? 'false' : 'true'}\n          >\n            «\n          </a>\n        </li>\n        {elementPageLink.map(el => {\n          return (\n            <li\n              className={cn('page-item', { active: el === currentPage })}\n              key={el}\n            >\n              <a\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href={`#${el}`}\n                onClick={() => onPageChange(el)}\n              >\n                {el}\n              </a>\n            </li>\n          );\n        })}\n        <li\n          className={cn('page-item', {\n            disabled: currentPage === lastPageLink,\n          })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            onClick={() =>\n              currentPage < lastPageLink && onPageChange(currentPage + 1)\n            }\n            aria-disabled={currentPage < lastPageLink ? 'false' : 'true'}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {rangeItemOnPage.map(el => {\n          if (el > 42) {\n            return null;\n          }\n\n          return (\n            <li data-cy=\"item\" key={el}>\n              Item {el}\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPageItem, setPerPageItem] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [massageItems, setMassageItems] = useState('1 - 5');\n\n  const onPageChange = (page: number): void => {\n    setCurrentPage(page);\n    const start: number = page * perPageItem - perPageItem + 1;\n    let end: number = start + perPageItem - 1;\n\n    end = end > 42 ? 42 : end;\n\n    setMassageItems(`${start} - ${end}`);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        Page {currentPage} (items {massageItems} of 42)\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            defaultValue=\"5\"\n            onChange={event => {\n              setPerPageItem(Number(event.target.value));\n              setCurrentPage(1);\n              setMassageItems(`${1} - ${Number(event.target.value)}`);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {/* Move this markup to Pagination */}\n\n      <Pagination\n        total={items}\n        perPage={perPageItem}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers: number[] = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}